// @ts-nocheck -- skip type checking
import * as docsMeta_3 from "../docs/content/getting-started/meta.json?collection=docsMeta&hash=1761894241346"
import * as docsMeta_2 from "../docs/content/core/meta.json?collection=docsMeta&hash=1761894241346"
import * as docsMeta_1 from "../docs/content/configuration/meta.json?collection=docsMeta&hash=1761894241346"
import * as docsMeta_0 from "../docs/content/meta.json?collection=docsMeta&hash=1761894241346"
import * as docsDocs_8 from "../docs/content/getting-started/quickstart.mdx?collection=docsDocs&hash=1761894241346"
import * as docsDocs_7 from "../docs/content/getting-started/introduction.mdx?collection=docsDocs&hash=1761894241346"
import * as docsDocs_6 from "../docs/content/getting-started/installation.mdx?collection=docsDocs&hash=1761894241346"
import * as docsDocs_5 from "../docs/content/core/workflow-automation.mdx?collection=docsDocs&hash=1761894241346"
import * as docsDocs_4 from "../docs/content/core/worker-health.mdx?collection=docsDocs&hash=1761894241346"
import * as docsDocs_3 from "../docs/content/core/orphan-detection.mdx?collection=docsDocs&hash=1761894241346"
import * as docsDocs_2 from "../docs/content/core/architecture.mdx?collection=docsDocs&hash=1761894241346"
import * as docsDocs_1 from "../docs/content/configuration/authentication.mdx?collection=docsDocs&hash=1761894241346"
import * as docsDocs_0 from "../docs/content/index.mdx?collection=docsDocs&hash=1761894241346"
import * as docs_3 from "../changelog/content/2025-10-31.mdx?collection=docs&hash=1761894241346"
import * as docs_2 from "../changelog/content/2025-10-28.mdx?collection=docs&hash=1761894241346"
import * as docs_1 from "../changelog/content/2025-10-27.mdx?collection=docs&hash=1761894241346"
import * as docs_0 from "../changelog/content/2025-10-20.mdx?collection=docs&hash=1761894241346"
import { _runtime } from "fumadocs-mdx"
import * as _source from "../source.config"
export const docs = _runtime.doc<typeof _source.docs>([{ info: {"path":"2025-10-20.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/changelog/content/2025-10-20.mdx"}, data: docs_0 }, { info: {"path":"2025-10-27.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/changelog/content/2025-10-27.mdx"}, data: docs_1 }, { info: {"path":"2025-10-28.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/changelog/content/2025-10-28.mdx"}, data: docs_2 }, { info: {"path":"2025-10-31.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/changelog/content/2025-10-31.mdx"}, data: docs_3 }]);
export const docsDocs = _runtime.doc<typeof _source.docsDocs>([{ info: {"path":"index.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/index.mdx"}, data: docsDocs_0 }, { info: {"path":"configuration/authentication.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/configuration/authentication.mdx"}, data: docsDocs_1 }, { info: {"path":"core/architecture.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/core/architecture.mdx"}, data: docsDocs_2 }, { info: {"path":"core/orphan-detection.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/core/orphan-detection.mdx"}, data: docsDocs_3 }, { info: {"path":"core/worker-health.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/core/worker-health.mdx"}, data: docsDocs_4 }, { info: {"path":"core/workflow-automation.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/core/workflow-automation.mdx"}, data: docsDocs_5 }, { info: {"path":"getting-started/installation.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/getting-started/installation.mdx"}, data: docsDocs_6 }, { info: {"path":"getting-started/introduction.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/getting-started/introduction.mdx"}, data: docsDocs_7 }, { info: {"path":"getting-started/quickstart.mdx","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/getting-started/quickstart.mdx"}, data: docsDocs_8 }]);
export const docsMeta = _runtime.meta<typeof _source.docsMeta>([{ info: {"path":"meta.json","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/meta.json"}, data: docsMeta_0 }, { info: {"path":"configuration/meta.json","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/configuration/meta.json"}, data: docsMeta_1 }, { info: {"path":"core/meta.json","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/core/meta.json"}, data: docsMeta_2 }, { info: {"path":"getting-started/meta.json","absolutePath":"/Users/bernhardczypka/private/getkanchi/docs/content/getting-started/meta.json"}, data: docsMeta_3 }]);
export const meta = _runtime.meta<typeof _source.meta>([]);